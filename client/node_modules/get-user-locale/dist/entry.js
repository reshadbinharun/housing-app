'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getUserLocale = exports.getUserLocales = undefined;

var _lodash = require('lodash.once');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var filterDuplicates = function filterDuplicates(arr) {
  return arr.filter(function (el, index, self) {
    return self.indexOf(el) === index;
  });
};

var fixLowercaseProperties = function fixLowercaseProperties(arr) {
  return arr.map(function (el) {
    if (!el || !el.includes('-') || el.toLowerCase() !== el) {
      return el;
    }

    var splitEl = el.split('-');
    return splitEl[0] + '-' + splitEl[1].toUpperCase();
  });
};

var getUserLocales = exports.getUserLocales = (0, _lodash2.default)(function () {
  var languageList = [];

  if (typeof window !== 'undefined') {
    if (window.navigator.languages) {
      languageList.push.apply(languageList, _toConsumableArray(window.navigator.languages));
    }
    if (window.navigator.language) {
      languageList.push(window.navigator.language);
    }
    if (window.navigator.userLanguage) {
      languageList.push(window.navigator.userLanguage);
    }
    if (window.navigator.browserLanguage) {
      languageList.push(window.navigator.browserLanguage);
    }
    if (window.navigator.systemLanguage) {
      languageList.push(window.navigator.systemLanguage);
    }
  }

  languageList.push('en-US'); // Fallback

  return fixLowercaseProperties(filterDuplicates(languageList));
});

var getUserLocale = exports.getUserLocale = (0, _lodash2.default)(function () {
  return getUserLocales()[0];
});

exports.default = getUserLocale;